TEAM JOURNAL - CSSE232-03
MEMBERS: Alex Dripchak, Joshua Eckels, Bailey Morgan, Eric Tu
AUTHOR: Alex Dripchak


Milestone 1

MEETING 1.0 - 01/07/2019 - 12:40 pm [60 min]
Members Present: Alex, Josh, Bailey
	(Eric not present due to miscommunication on members present's parts)

We decided to use a load/store architecture to build our processor. Part of the reason was it would be the easiest architecture to use in order to have 16-bit immediates. We could also use an accumulator style for math instructions using a dedicated register. 

MEETING 1.1 - 01/08/2019 - 2:30 pm [50 min]
All members present & on time

Discussed how to construct instructions (ie how to divide bits to opcodes, regs, etc), registers. Decided that we would use more registers in favor of speed as opposed to using the stack. To account for this, we would have 128 function registers that would be represented by the first 16 "f" regs that could be all accessed by using (FCC * 16) + regs. 


MEETING 1.2 - 01/08/2019 - 8:30 pm [90 min]
All members present

Began working on translating Euclid's Algorithm, relPrime, and other small algorithms to demonstrate operations. Also translated our instructions to machine code. 

MEETING 1.3 - 01/09/2019 - 1:30 pm [120 min]
All members present

Finished Euclid's algorithm and relPrime. Translated the assembly language snippets to machine code. Polished the document. Completed Milestone 1. Pushed everything to git log in Design branch.

Milestone 2 

MEETING 2.0 - 01/14/2019 - 5:10 pm [60 min]
Members Present: Josh, Bailey, Eric 
Put the skeleton of the RTL in the table and mapped out what kind of registers we need for our RTL and what they do 

MEETING 2.1 - 01/15/2019 - 5:30 pm [90 min]
All members present 
Finished the RTL write-up for all instructions. Polished them. 
Recorded a list of components that will be needed for the data path. 
NOTE: REMEMBER TO REMOVE THE "MOV" INSTR!!!

MEETING 2.2 - 01/16/2019 - 1:30pm [120 min]
All members present
Polished up and translate RTL over to our design document. Developed shopping list for all hardware in our RTL.
Started describing our components. Added a comparator to the list, ALU now has 3 bit opcodes as we had 5 operations and needed 3 control wires to accomodate this. 
Developed a "code-tracing thought experiment" in order to test our RTL, easier and quicker to develop than a simluation and less reliant on others than a survery from other groups.

MEETING 3.1 - 01/20/2019 - 2:30pm [150 min]
All members present (Alex facetime)
Completed rough draft of datapath after walking through RTL for each instruction. Made changes to RTL based on our datapath.
We are still in need of documentation for each component and subsystem. Worked on defining and documenting control signals.
Will use a ROM for control unit. Meeting tomorrow to move a lot of the work from today into the design document.




